
include:
  - local: /.gitlab/ci/builders.yml
  - local: /.gitlab/ci/configs.yml
  - local: /.gitlab/ci/runners.yml

test:rust:unit_tests:
  stage: test
  extends:
    - .builder:linux:x86_64-unknown-linux-gnu
  needs: []
  dependencies: []
  script:
    - cargo test --locked --verbose

variables:
  TESTS: complex_call fs generics http_client http_javascript

testers:rust:x86_64-unknown-linux-gnu:
  stage: test
  extends: 
    - .build-testers
    - .builder:linux:x86_64-unknown-linux-gnu
  script:
    - cd tests/testers
    - cargo build --locked 
    - ls target/x86_64-unknown-linux-gnu/debug
  artifacts:
    paths:
      - tests/testers/target/x86_64-unknown-linux-gnu/debug
    expire_in: 1 hour

testers:rust:x86_64-unknown-linux-musl:
  stage: test
  extends:
    - .build-testers
    - .builder:linux:x86_64-unknown-linux-musl
  script:
    - cd tests/testers
    - cargo build --locked
    - ls target/x86_64-unknown-linux-musl/debug
  artifacts:
    paths:
      - tests/testers/target/x86_64-unknown-linux-musl/debug
    expire_in: 1 hour

testers:rust:i686-unknown-linux-gnu:
  stage: test
  extends:
    - .build-testers
    - .builder:linux:i686-unknown-linux-gnu
  script:
    - cd tests/testers
    - cargo build --locked
    - ls target/i686-unknown-linux-gnu/debug
  artifacts:
    paths:
      - tests/testers/target/i686-unknown-linux-gnu/debug
    expire_in: 1 hour

testers:rust:i686-unknown-linux-musl:
  stage: test
  extends:
    - .build-testers
    - .builder:linux:i686-unknown-linux-musl
  script:
    - cd tests/testers
    - cargo build --locked
    - ls target/i686-unknown-linux-musl/debug
  artifacts:
    paths:
      - tests/testers/target/i686-unknown-linux-musl/debug
    expire_in: 1 hour

testers:rust:aarch64-unknown-linux-gnu:
  stage: test
  extends:
    - .build-testers
    - .builder:linux:aarch64-unknown-linux-gnu
  script:
    - cd tests/testers
    - cargo build --locked
    - ls target/aarch64-unknown-linux-gnu/debug
  artifacts:
    paths:
      - tests/testers/target/aarch64-unknown-linux-gnu/debug
    expire_in: 1 hour

testers:rust:aarch64-unknown-linux-musl:
  stage: test
  extends:
    - .build-testers
    - .builder:linux:aarch64-unknown-linux-musl
  script:
    - cd tests/testers
    - cargo build --locked
    - ls target/aarch64-unknown-linux-musl/debug
  artifacts:
    paths:
      - tests/testers/target/aarch64-unknown-linux-musl/debug
    expire_in: 1 hour

testers:rust:x86_64-apple-darwin:
  stage: test
  extends:
    - .build-testers
    - .builder:linux:x86_64-apple-darwin
  script:
    - cd tests/testers
    - cargo build --locked
    - ls target/x86_64-apple-darwin/debug
  artifacts:
    paths:
      - tests/testers/target/x86_64-apple-darwin/debug
    expire_in: 1 hour

# testers:rust:i686-apple-darwin:
#   stage: test
#   extends:
#     - .build-testers
#     - .builder:linux:i686-apple-darwin
#   script:
#    - cd tests/testers
#    - xargo build --target i686-apple-darwin
#    - ls target/i686-apple-darwin/debug
#   artifacts:
#     paths:
#       - tests/testers/target/i686-apple-darwin/debug
#     expire_in: 1 hour

testers:rust:aarch64-apple-darwin:
  stage: test
  extends:
    - .build-testers
    - .builder:linux:aarch64-apple-darwin
  script:
    - cd tests/testers
    - cargo build --locked
    - ls target/aarch64-apple-darwin/debug
  artifacts:
    paths:
      - tests/testers/target/aarch64-apple-darwin/debug
    expire_in: 1 hour

testers:rust:x86_64-pc-windows-gnu:
  stage: test
  extends:
    - .build-testers
    - .builder:linux:x86_64-pc-windows-gnu
  script:
    - cd tests/testers
    - cargo build --locked
    - ls target/x86_64-pc-windows-gnu/debug
  artifacts:
    paths:
      - tests/testers/target/x86_64-pc-windows-gnu/debug
    expire_in: 1 hour

testers:rust:x86_64-pc-windows-msvc:
  stage: test
  extends:
    - .build-testers
    - .builder:linux:x86_64-pc-windows-msvc
  script:
    - cd tests/testers
    - cargo build --locked
    - ls target/x86_64-pc-windows-msvc/debug
  artifacts:
    paths:
      - tests/testers/target/x86_64-pc-windows-msvc/debug
    expire_in: 1 hour

testers:rust:i686-pc-windows-gnu:
  stage: test
  extends:
    - .build-testers
    - .builder:linux:i686-pc-windows-gnu
  script:
    - cd tests/testers
    - cargo build --locked
    - ls target/i686-pc-windows-gnu/debug
  artifacts:
    paths:
      - tests/testers/target/i686-pc-windows-gnu/debug
    expire_in: 1 hour

testers:rust:i686-pc-windows-msvc:
  stage: test
  extends:
    - .build-testers
    - .builder:linux:i686-pc-windows-msvc
  script:
    - cd tests/testers
    - cargo build --locked
    - ls target/i686-pc-windows-msvc/debug
  artifacts:
    paths:
      - tests/testers/target/i686-pc-windows-msvc/debug
    expire_in: 1 hour

testers:rust:aarch64-pc-windows-msvc:
  stage: test
  extends:
    - .build-testers
    - .builder:linux:aarch64-pc-windows-msvc
  script:
    - cd tests/testers
    - cargo build --locked
    - ls target/aarch64-pc-windows-msvc/debug
  artifacts:
    paths:
      - tests/testers/target/aarch64-pc-windows-msvc/debug
    expire_in: 1 hour

test:melodium:x86_64-unknown-linux-gnu:
  stage: test
  extends: 
    - .run-tests
    - .runner:debian:x86_64
  needs:
    - build:debug:x86_64-unknown-linux-gnu
    - testers:rust:x86_64-unknown-linux-gnu
  script:
    - apt update
    - apt install -y curl
    - export PATH="$CI_PROJECT_DIR/target/x86_64-unknown-linux-gnu/debug:$PATH"
    - curl -v https://melodium.tech/ > /dev/null
    - cd tests/
    - |
      OK=0
      for TEST in $TESTS 
      do
        echo Running $TEST
        if testers/target/x86_64-unknown-linux-gnu/debug/$TEST
        then
          echo $TEST OK
        else
          OK=1
          echo $TEST failed
        fi
      done
      exit $OK

test:melodium:x86_64-unknown-linux-musl:
  stage: test
  extends: 
    - .run-tests
    - .runner:alpine:x86_64
  needs:
    - build:debug:x86_64-unknown-linux-musl
    - testers:rust:x86_64-unknown-linux-musl
  script:
    - apk update
    - apk add curl
    - export PATH="$CI_PROJECT_DIR/target/x86_64-unknown-linux-musl/debug:$PATH"
    - curl -v https://melodium.tech/ > /dev/null
    - cd tests/
    - |
      OK=0
      for TEST in $TESTS 
      do
        echo Running $TEST
        if testers/target/x86_64-unknown-linux-musl/debug/$TEST
        then
          echo $TEST OK
        else
          OK=1
          echo $TEST failed
        fi
      done
      exit $OK

test:melodium:i686-unknown-linux-gnu:
  stage: test
  extends: 
    - .run-tests
    - .runner:debian:x86_64
  needs:
    - build:debug:i686-unknown-linux-gnu
    - testers:rust:i686-unknown-linux-gnu
  before_script:
    - dpkg --add-architecture i386
    - apt-get update
    - apt-get install -y libc6:i386 libstdc++6:i386 curl
  script:
    - export PATH="$CI_PROJECT_DIR/target/i686-unknown-linux-gnu/debug:$PATH"
    - curl -v https://melodium.tech/ > /dev/null
    - cd tests/
    - |
      OK=0
      for TEST in $TESTS 
      do
        echo Running $TEST
        if testers/target/i686-unknown-linux-gnu/debug/$TEST
        then
          echo $TEST OK
        else
          OK=1
          echo $TEST failed
        fi
      done
      exit $OK

test:melodium:i686-unknown-linux-musl:
  stage: test
  extends: 
    - .run-tests
    - .runner:alpine:x86_64
  needs:
    - build:debug:i686-unknown-linux-musl
    - testers:rust:i686-unknown-linux-musl
  script:
    - apk update
    - apk add curl
    - export PATH="$CI_PROJECT_DIR/target/i686-unknown-linux-musl/debug:$PATH"
    - curl -v https://melodium.tech/ > /dev/null
    - cd tests/
    - |
      OK=0
      for TEST in $TESTS 
      do
        echo Running $TEST
        if testers/target/i686-unknown-linux-musl/debug/$TEST
        then
          echo $TEST OK
        else
          OK=1
          echo $TEST failed
        fi
      done
      exit $OK

test:melodium:aarch64-apple-darwin:
  stage: test
  extends: 
    - .run-tests
    - .runner:mac:aarch64
  needs:
    - build:debug:aarch64-apple-darwin
    - testers:rust:aarch64-apple-darwin
  script:
    - export PATH="$CI_PROJECT_DIR/target/aarch64-apple-darwin/debug:$PATH"
    - curl -v https://melodium.tech/ > /dev/null
    - cd tests/
    - |
      OK=0
      for TEST in $TESTS 
      do
        echo Running $TEST
        if testers/target/aarch64-apple-darwin/debug/$TEST
        then
          echo $TEST OK
        else
          OK=1
          echo $TEST failed
        fi
      done
      exit $OK

test:melodium:x86_64-pc-windows-gnu:
  stage: test
  extends: 
    - .run-tests
    - .runner:windows:x86_64
  needs:
    - build:debug:x86_64-pc-windows-gnu
    - testers:rust:x86_64-pc-windows-gnu
  script:
    - $Env:Path="$CI_PROJECT_DIR/target/x86_64-pc-windows-gnu/debug;$Env:Path"
    - cd tests/
    - $TESTS = $TESTS.Split(" ")
    - |
      $OK = 0
      Foreach ($TEST in $TESTS) {
        echo Running $TEST
        & ./testers/target/x86_64-pc-windows-gnu/debug/$TEST.exe
        If ( $? ) {
          echo $TEST OK
        }
        Else {
          $OK=1
          echo $TEST failed
        }
      }
      exit $OK

test:melodium:x86_64-pc-windows-msvc:
  stage: test
  extends: 
    - .run-tests
    - .runner:windows:x86_64
  needs:
    - build:debug:x86_64-pc-windows-msvc
    - testers:rust:x86_64-pc-windows-msvc
  script:
    - $Env:Path="$CI_PROJECT_DIR/target/x86_64-pc-windows-msvc/debug;$Env:Path"
    - cd tests/
    - $TESTS = $TESTS.Split(" ")
    - |
      $OK = 0
      Foreach ($TEST in $TESTS) {
        echo Running $TEST
        & ./testers/target/x86_64-pc-windows-msvc/debug/$TEST.exe
        If ( $? ) {
          echo $TEST OK
        }
        Else {
          $OK=1
          echo $TEST failed
        }
      }
      exit $OK

test:melodium:i686-pc-windows-gnu:
  stage: test
  extends: 
    - .run-tests
    - .runner:windows:x86_64
  needs:
    - build:debug:i686-pc-windows-gnu
    - testers:rust:i686-pc-windows-gnu
  script:
    - $Env:Path="$CI_PROJECT_DIR/target/i686-pc-windows-gnu/debug;$Env:Path"
    - cd tests/
    - $TESTS = $TESTS.Split(" ")
    - |
      $OK = 0
      Foreach ($TEST in $TESTS) {
        echo Running $TEST
        & ./testers/target/i686-pc-windows-gnu/debug/$TEST.exe
        If ( $? ) {
          echo $TEST OK
        }
        Else {
          $OK=1
          echo $TEST failed
        }
      }
      exit $OK

test:melodium:i686-pc-windows-msvc:
  stage: test
  extends: 
    - .run-tests
    - .runner:windows:x86_64
  needs:
    - build:debug:i686-pc-windows-msvc
    - testers:rust:i686-pc-windows-msvc
  script:
    - $Env:Path="$CI_PROJECT_DIR/target/i686-pc-windows-msvc/debug;$Env:Path"
    - cd tests/
    - $TESTS = $TESTS.Split(" ")
    - |
      $OK = 0
      Foreach ($TEST in $TESTS) {
        echo Running $TEST
        & ./testers/target/i686-pc-windows-msvc/debug/$TEST.exe
        If ( $? ) {
          echo $TEST OK
        }
        Else {
          $OK=1
          echo $TEST failed
        }
      }
      exit $OK

# test:melodium:general:
#   stage: test
#   extends: 
#     - .debian-host
#     - .cargo-cache
#   needs:
#     - build:debug:x86_64-unknown-linux-gnu
#   dependencies: 
#     - build:debug:x86_64-unknown-linux-gnu
#   before_script:
#     - apt-get update
#     - apt-get install -y libasound2
#   script:
#     - PATH="${PWD}/target/x86_64-unknown-linux-gnu/debug:${PATH}" melodium-tests/run.sh
