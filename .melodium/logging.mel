use fs/local::writeTextLocal
use log/logger::Log
use log/logger::filterLogs
use log/logger::|debug
use log/logger::|info
use log/logger::|trace
use log/logger::|warning
use log/logger::|error
use std/conv::toString
use std/text/compose::format
use std/text/compose::|format
use std/data/string_map::entry
use std/data/string_map::|entry

treatment writeLogs(out_directory: string)
  input logs: Stream<Log>
{
    writeAllLog(file=|format("{dir}/log/full", |entry("dir", out_directory)))
    writeX86_64UnknownLinuxGnu: writeLog(label="x86_64-unknown-linux-gnu", file=|format("{dir}/log/x86_64-unknown-linux-gnu", |entry("dir", out_directory)))
    writeX86_64UnknownLinuxMusl: writeLog(label="x86_64-unknown-linux-musl", file=|format("{dir}/log/x86_64-unknown-linux-musl", |entry("dir", out_directory)))
    writeAarch64UnknownLinuxGnu: writeLog(label="aarch64-unknown-linux-gnu", file=|format("{dir}/log/aarch64-unknown-linux-gnu", |entry("dir", out_directory)))
    writeAarch64UnknownLinuxMusl: writeLog(label="aarch64-unknown-linux-musl", file=|format("{dir}/log/aarch64-unknown-linux-musl", |entry("dir", out_directory)))
    writeI686UnknownLinuxGnu: writeLog(label="i686-unknown-linux-gnu", file=|format("{dir}/log/i686-unknown-linux-gnu", |entry("dir", out_directory)))
    writeI686UnknownLinuxMusl: writeLog(label="i686-unknown-linux-musl", file=|format("{dir}/log/i686-unknown-linux-musl", |entry("dir", out_directory)))
    writeWasm32UnknownUnknown: writeLog(label="wasm32-unknown-unknown", file=|format("{dir}/log/wasm32-unknown-unknown", |entry("dir", out_directory)))
    writeX86_64AppleDarwin: writeLog(label="x86_64-apple-darwin", file=|format("{dir}/log/x86_64-apple-darwin", |entry("dir", out_directory)))
    writeAarch64AppleDarwin: writeLog(label="aarch64-apple-darwin", file=|format("{dir}/log/aarch64-apple-darwin", |entry("dir", out_directory)))
    writeX86_64PcWindowsGnu: writeLog(label="x86_64-pc-windows-gnu", file=|format("{dir}/log/x86_64-pc-windows-gnu", |entry("dir", out_directory)))
    writeX86_64PcWindowsMsvc: writeLog(label="x86_64-pc-windows-msvc", file=|format("{dir}/log/x86_64-pc-windows-msvc", |entry("dir", out_directory)))
    writeI686PcWindowsGnu: writeLog(label="i686-pc-windows-gnu", file=|format("{dir}/log/i686-pc-windows-gnu", |entry("dir", out_directory)))
    writeI686PcWindowsMsvc: writeLog(label="i686-pc-windows-msvc", file=|format("{dir}/log/i686-pc-windows-msvc", |entry("dir", out_directory)))
    writeAarch64PcWindowsMsvc: writeLog(label="aarch64-pc-windows-msvc", file=|format("{dir}/log/aarch64-pc-windows-msvc", |entry("dir", out_directory)))

    Self.logs -> writeAllLog.logs
    Self.logs -> writeX86_64UnknownLinuxGnu.logs
    Self.logs -> writeX86_64UnknownLinuxMusl.logs
    Self.logs -> writeAarch64UnknownLinuxGnu.logs
    Self.logs -> writeAarch64UnknownLinuxMusl.logs
    Self.logs -> writeI686UnknownLinuxGnu.logs
    Self.logs -> writeI686UnknownLinuxMusl.logs
    Self.logs -> writeWasm32UnknownUnknown.logs
    Self.logs -> writeX86_64AppleDarwin.logs
    Self.logs -> writeAarch64AppleDarwin.logs
    Self.logs -> writeX86_64PcWindowsGnu.logs
    Self.logs -> writeX86_64PcWindowsMsvc.logs
    Self.logs -> writeI686PcWindowsGnu.logs
    Self.logs -> writeI686PcWindowsMsvc.logs
    Self.logs -> writeAarch64PcWindowsMsvc.logs
}

treatment writeLog(label: string, file: string)
  input logs: Stream<Log>
{
    filterLogs(levels=[|debug(), |info(), |trace(), |warning(), |error()], labels=[label])
    toString<Log>()
    entry(key="log")
    format(format="{log}\n")
    writeTextLocal(path=file)

    Self.logs -> filterLogs.logs,filtered -> toString.value,into -> entry.value,map -> format.entries,formatted -> writeTextLocal.text
}

treatment writeAllLog(file: string)
  input logs: Stream<Log>
{
    toString<Log>()
    entry(key="log")
    format(format="{log}\n")
    writeTextLocal(path=file)

    Self.logs -> toString.value,into -> entry.value,map -> format.entries,formatted -> writeTextLocal.text
}
