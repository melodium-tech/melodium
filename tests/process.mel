#!/usr/bin/env melodium
#! name = process_test
#! version = 0.9.0-pre.5
#! require = std:=0.9.0-pre.5
#! require = fs:=0.9.0-pre.5
#! require = process:=0.9.0-pre.5

use std/engine/util::startup
use std/flow::stream
use std/text/convert/string::toUtf8
use std/flow::emit
use fs/local::writeLocal
use process/command::|command
use process/local::spawnOnce
use std/ops/option::|wrap

treatment main(const work: Option<string> = _)
{
    spawn: spawnOnce(command=|command("sed", ["-e", "s/foo/bar/g"]))
    startup()
    
    startup.trigger ------> spawn.launch

    emitText: emit<string>(value="This is foo!")
    streamText: stream<string>()
    toUtf8()
    file: writeLocal(path="./replaced.txt")
    startup.trigger -> emitText.trigger,emit -> streamText.block,stream -> toUtf8.text,encoded -> spawn.stdin,stdout -> file.data

    fileError: writeLocal(path="./error.txt")
    spawn.stderr --> fileError.data

    streamFailure: stream<string>()
    failureToUtf8: toUtf8()
    fileFailure: writeLocal(path="./failure.txt")
    spawn.error -> streamFailure.block,stream -> failureToUtf8.text,encoded -> fileFailure.data
}
