
use root/builders::stepFileResult
use fs/file::read
use fs/filesystem::FileSystem
use process/exec::Executor
use process/command::|command
use log/logger::Logger
use log/log::logInfoMessage
use log/log::logErrorMessage
use std/data::|entry
use std/text/compose::|format
use std/ops::|condition
use std/ops/option::|unwrap_or
use std/text/compare::|contains

treatment buildMelodium[logger: Logger](var target: string)
  input executor: Block<Executor>
  input filesystem: Block<FileSystem>
  input trigger: Block<void>
  output started: Block<void>
  output finished: Block<void>
  output failed: Block<void>
  output completed: Block<void>
  output file: Stream<byte>
{
    build: stepFileResult[logger=logger](
      label=|unwrap_or<string>(|format("build:{target}", |entry<string>("target", target)), "build"),
      commands=[
          |command("rustc", ["--version"]),
          |command("cargo", ["--version"]),
          |command("cargo", ["build", "--package", "melodium", "--target", target])
      ],
      file=|condition<string>(|contains(target, "windows"), |unwrap_or<string>(|format("target/{target}/debug/melodium.exe", |entry<string>("target", target)), "target/melodium.exe"), |unwrap_or<string>(|format("target/{target}/debug/melodium", |entry<string>("target", target)), "target/melodium"))
    )

    logInfoMessage[logger=logger](label="success", message=|unwrap_or<string>(|format("Build {target} completed", |entry<string>("target", target)), "Build `unknown target` completed"))
    logErrorMessage[logger=logger](label="failure", message=|unwrap_or<string>(|format("Build {target} failed", |entry<string>("target", target)), "Build `unknown target` failed"))

    Self.executor ---> build.executor
    Self.filesystem -> build.filesystem
    Self.trigger ----> build.trigger

    build.failed ----> logErrorMessage.trigger
    build.completed -> logInfoMessage.trigger

    build.started ---> Self.started
    build.finished --> Self.finished
    build.failed ----> Self.failed
    build.completed -> Self.completed
    build.data ------> Self.file
}