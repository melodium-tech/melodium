use std/flow/void::StreamBlock
use std/filler/scalar/u128::StaticVecFill

/**
Emit a value as stream when trigger is received.

The vector is sent through the stream and the stream is closed immediately afterwards.

```mermaid
graph LR
    T("Emit(value=ï¼»ğŸŸ§ ğŸŸ§ ğŸŸ§ï¼½)")
    B["ã€ˆğŸŸ¦ã€‰"] -->|trigger| T
    
    T -->|value| O["ï¼»ğŸŸ§ ğŸŸ§ ğŸŸ§ï¼½"]

    style B fill:#ffff,stroke:#ffff
    style O fill:#ffff,stroke:#ffff
```
*/
sequence Emit(var value: Vec<u128> = [0])
  input trigger: Block<void>
  output value:  Stream<Vec<u128>>
{
    StreamBlock()
    StaticVecFill(value=value)

    Self.trigger -> StreamBlock.block,stream -> StaticVecFill.pattern,value -> Self.value
}


use std/flow/void::Linearize
use std/flow/u128::Organize
use std/filler/scalar/u128::StaticFill as ScalarStaticFill

/**
Fill an input `Vec<void>` stream with scalar static `u128` values.

```mermaid
graph LR
    T("StaticFillÂ (value=ğŸŸ§)")
    B["â€¦ï¼»ğŸŸ¦Â ğŸŸ¦Â ğŸŸ¦ï¼½ï¼»ğŸŸ¦Â ğŸŸ¦ï¼½ï¼»ğŸŸ¦Â ğŸŸ¦Â ğŸŸ¦ï¼½â€¦"] -->|pattern| T
    
    T -->|value| O["â€¦ï¼»ğŸŸ§Â ğŸŸ§Â ğŸŸ§ï¼½ï¼»ğŸŸ§Â ğŸŸ§ï¼½ï¼»ğŸŸ§Â ğŸŸ§Â ğŸŸ§ï¼½â€¦"]

    style B fill:#ffff,stroke:#ffff
    style O fill:#ffff,stroke:#ffff
```
*/
sequence StaticFill(var value: u128 = 0)
  input pattern: Stream<Vec<void>>
  output value:  Stream<Vec<u128>>
{
    Linearize()
    ScalarStaticFill(value=value)
    Organize()

    Self.pattern -> Linearize.vector,value -> ScalarStaticFill.pattern,value -> Organize.value,values -> Self.value
    Self.pattern -------------------------------------------------------------> Organize.pattern
    
}

use core/filling/vector::FillVecU128 as CoreFill

/**
Fill an input stream of `void` vectors with matching values from `u128` stream.

```mermaid
graph LR
    T("Fill()")
    V["â€¦Â ğŸŸ¥Â ğŸŸ§Â ğŸŸ¨Â â€¦"] -->|value| T
    P["â€¦ï¼»ğŸŸ¦Â ğŸŸ¦Â ğŸŸ¦ï¼½ï¼»ğŸŸ¦Â ğŸŸ¦ï¼½ï¼»ğŸŸ¦Â ğŸŸ¦Â ğŸŸ¦ï¼½â€¦"] -->|pattern| T
    
    T -->|value| O["â€¦ï¼»ğŸŸ¥Â ğŸŸ¥Â ğŸŸ¥ï¼½ï¼»ğŸŸ§Â ğŸŸ§ï¼½ï¼»ğŸŸ¨Â ğŸŸ¨Â ğŸŸ¨ï¼½â€¦"]

    style V fill:#ffff,stroke:#ffff
    style P fill:#ffff,stroke:#ffff
    style O fill:#ffff,stroke:#ffff
```
*/
sequence Fill()
  input value:   Stream<u128>
  input pattern: Stream<Vec<void>>
  output value:  Stream<Vec<u128>>
{
    CoreFill()

    Self.value ---> CoreFill.value
    Self.pattern -> CoreFill.pattern,value -> Self.value
}

