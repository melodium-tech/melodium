# Modified from original GitLab/Rust template

stages:
  - build
  - test_rust
  - test_melodium
  - benchmark_rust
  - benchmark_melodium
  - deploy

# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
# services:
#   - mysql:latest
#   - redis:latest
#   - postgres:latest

# Optional: Install a C compiler, cmake and git into the container.
# You will often need this when you (or any of your dependencies) depends on C code.
# before_script:
#   - apt-get update -yqq
#   - apt-get install -yqq --no-install-recommends build-essential

image: rust:latest

# Use cargo to build the project
rust_build:
  stage: build
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo build --verbose
  artifacts:
    paths:
    - target/debug
    expire_in: 1 day

#rust_unit_tests:
#  stage: test_rust
#  script:
#    - cargo test --tests --verbose

#rust_doc_tests:
#  stage: test_rust
#  script:
#    - cargo test --doc --verbose
#
#rust_benchmark:
#  stage: benchmark_rust
#  script:
#    - cargo bench --benches --verbose

melodium_tests:
  stage: test_melodium
  variables:
    PATH: '$PWD/target/debug:$PATH'
    MELODIUM: 'melodium-rust'
  script:
    - melodium-tests/run.sh

pages:
  stage: deploy
  script:
    - cargo doc --no-deps
    - mv target/doc public
    - echo "/melodium-rust/ /melodium-rust/melodium_rust/" > public/_redirects
  artifacts:
    paths:
      - public
  only:
    - master
