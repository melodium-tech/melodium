[package]
name = "melodium"
version = "0.9.0-pre.5"
authors = ["Quentin VIGNAUD <quentin.vignaud@melodium.tech>"]
rust-version = "1.83"
edition = "2018"
license = "EUPL-1.2"
homepage = "https://melodium.tech"
repository = "https://gitlab.com/melodium/melodium"
readme = "README.md"
description = "Flow-oriented language & tool, focusing on treatments applied on data, allowing high scalability and massive parallelization safely"
keywords = ["dataflow","parallelization","scalability","async","signal"]
categories = ["compilers", "science", "concurrency", "asynchronous"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
#crate-type = ["cdylib", "rlib"]
name = "melodium"

[[bin]]
name = "melodium"
required-features = ["cli"]

[dependencies]
async-std = "1.13"
clap = { version = "4.0.32", features = ["cargo", "derive", "string"], optional = true }
colored = { version = "2.0.2", optional = true }
convert_case = "0.6"
melodium-common = { path = "../melodium-common", version = "=0.9.0-pre.5" }
melodium-core = { path = "../melodium-core", version = "=0.9.0-pre.5", optional = true  }
melodium-engine = { path = "../melodium-engine", version = "=0.9.0-pre.5" }
melodium-lang = { path = "../melodium-lang", version = "=0.9.0-pre.5" }
melodium-loader = { path = "../melodium-loader", version = "=0.9.0-pre.5" }
melodium-distribution = { path = "../melodium-distribution", version = "=0.9.0-pre.5", optional = true  }
melodium-doc = { path = "../melodium-doc", version = "=0.9.0-pre.5", optional = true }
melodium-share = { path = "../melodium-share", version = "=0.9.0-pre.5", optional = true }
uuid = { version = "1.5.0", features = ["serde"], optional = true }

std-mel = { path = "../libs/std-mel", version = "=0.9.0-pre.5" }

cicd-mel = { path = "../libs/cicd-mel", version = "=0.9.0-pre.5", optional = true }
distrib-mel = { path = "../libs/distrib-mel", version = "=0.9.0-pre.5", optional = true }
encoding-mel = { path = "../libs/encoding-mel", version = "=0.9.0-pre.5", optional = true }
fs-mel = { path = "../libs/fs-mel", version = "=0.9.0-pre.5", optional = true }
http-mel = { path = "../libs/http-mel", version = "=0.9.0-pre.5", optional = true }
javascript-mel = { path = "../libs/javascript-mel", version = "=0.9.0-pre.5", optional = true }
json-mel = { path = "../libs/json-mel", version = "=0.9.0-pre.5", optional = true }
log-mel = { path = "../libs/log-mel", version = "=0.9.0-pre.5", optional = true }
net-mel = { path = "../libs/net-mel", version = "=0.9.0-pre.5", optional = true }
process-mel = { path = "../libs/process-mel", version = "=0.9.0-pre.5", optional = true }
regex-mel = { path = "../libs/regex-mel", version = "=0.9.0-pre.5", optional = true }
sql-mel = { path = "../libs/sql-mel", version = "=0.9.0-pre.5", optional = true }
work-mel = { path = "../libs/work-mel", version = "=0.9.0-pre.5", optional = true }

[features]
default = ["cli", "standard-edition"]
cli = ["clap", "colored"]
jeu = ["melodium-loader/jeu"]
cicd = ["distribution", "fs", "network", "cicd-mel/real"]
distribution = ["melodium-distribution", "distrib-mel/real", "work-mel/real", "uuid"]
doc = ["melodium-doc", "melodium-engine/doc", "melodium-core/doc"]
network = ["net-mel/real", "http-mel/real", "melodium-loader/network"]
fs = ["fs-mel/real", "process-mel/real", "melodium-loader/filesystem"]
log = ["log-mel/real"]
text = ["encoding-mel/real", "regex-mel/real"]
javascript = ["javascript-mel/real", "json-mel/real"]
sql = ["sql-mel/real"]
standard-edition = ["jeu", "doc", "cicd", "distribution", "fs", "log", "network", "text", "javascript", "sql", "std-mel/real"]
container-edition = ["standard-edition", "work-mel/kubernetes"]
webassembly-edition = ["melodium-share/webassembly", "jeu", "doc", "std-mel/mock", "cicd-mel/mock", "log-mel/mock", "encoding-mel/mock", "regex-mel/mock", "javascript-mel/mock", "json-mel/mock", "sql-mel/mock", "distrib-mel/mock", "work-mel/mock", "uuid/js", "fs-mel/mock", "process-mel/mock", "net-mel/mock", "http-mel/mock"]

[target.wasm32-unknown-unknown.dependencies]
getrandom = { version = "0.2", features = ["js"] }
wasm-bindgen = "0.2.100"
wasm-bindgen-utils = "0.0.10"
serde-wasm-bindgen = "0.6"
serde = { version = "1.0", features = ["derive"] }
console_error_panic_hook = "0.1.7"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[package.metadata.deb]
section = "devel"
priority = "optional"
