
use core/flow::BlockVecU8ToStreamU8

/**
Stream a vector of `u8`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockU8()
  input  block:  Block<Vec<u8>>
  output stream: Stream<u8>
{
    BlockVecU8ToStreamU8()

    Self.block -> BlockVecU8ToStreamU8.data,data -> Self.stream
}



use core/flow::BlockVecU16ToStreamU16

/**
Stream a vector of `u16`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockU16()
  input  block:  Block<Vec<u16>>
  output stream: Stream<u16>
{
    BlockVecU16ToStreamU16()

    Self.block -> BlockVecU16ToStreamU16.data,data -> Self.stream
}



use core/flow::BlockVecU32ToStreamU32

/**
Stream a vector of `u32`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockU32()
  input  block:  Block<Vec<u32>>
  output stream: Stream<u32>
{
    BlockVecU32ToStreamU32()

    Self.block -> BlockVecU32ToStreamU32.data,data -> Self.stream
}



use core/flow::BlockVecU64ToStreamU64

/**
Stream a vector of `u64`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockU64()
  input  block:  Block<Vec<u64>>
  output stream: Stream<u64>
{
    BlockVecU64ToStreamU64()

    Self.block -> BlockVecU64ToStreamU64.data,data -> Self.stream
}



use core/flow::BlockVecU128ToStreamU128

/**
Stream a vector of `u128`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockU128()
  input  block:  Block<Vec<u128>>
  output stream: Stream<u128>
{
    BlockVecU128ToStreamU128()

    Self.block -> BlockVecU128ToStreamU128.data,data -> Self.stream
}



use core/flow::BlockVecI8ToStreamI8

/**
Stream a vector of `i8`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockI8()
  input  block:  Block<Vec<i8>>
  output stream: Stream<i8>
{
    BlockVecI8ToStreamI8()

    Self.block -> BlockVecI8ToStreamI8.data,data -> Self.stream
}



use core/flow::BlockVecI16ToStreamI16

/**
Stream a vector of `i16`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockI16()
  input  block:  Block<Vec<i16>>
  output stream: Stream<i16>
{
    BlockVecI16ToStreamI16()

    Self.block -> BlockVecI16ToStreamI16.data,data -> Self.stream
}



use core/flow::BlockVecI32ToStreamI32

/**
Stream a vector of `i32`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockI32()
  input  block:  Block<Vec<i32>>
  output stream: Stream<i32>
{
    BlockVecI32ToStreamI32()

    Self.block -> BlockVecI32ToStreamI32.data,data -> Self.stream
}



use core/flow::BlockVecI64ToStreamI64

/**
Stream a vector of `i64`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockI64()
  input  block:  Block<Vec<i64>>
  output stream: Stream<i64>
{
    BlockVecI64ToStreamI64()

    Self.block -> BlockVecI64ToStreamI64.data,data -> Self.stream
}



use core/flow::BlockVecI128ToStreamI128

/**
Stream a vector of `i128`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockI128()
  input  block:  Block<Vec<i128>>
  output stream: Stream<i128>
{
    BlockVecI128ToStreamI128()

    Self.block -> BlockVecI128ToStreamI128.data,data -> Self.stream
}



use core/flow::BlockVecF32ToStreamF32

/**
Stream a vector of `f32`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockF32()
  input  block:  Block<Vec<f32>>
  output stream: Stream<f32>
{
    BlockVecF32ToStreamF32()

    Self.block -> BlockVecF32ToStreamF32.data,data -> Self.stream
}



use core/flow::BlockVecF64ToStreamF64

/**
Stream a vector of `f64`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockF64()
  input  block:  Block<Vec<f64>>
  output stream: Stream<f64>
{
    BlockVecF64ToStreamF64()

    Self.block -> BlockVecF64ToStreamF64.data,data -> Self.stream
}



use core/flow::BlockVecBoolToStreamBool

/**
Stream a vector of `bool`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockBool()
  input  block:  Block<Vec<bool>>
  output stream: Stream<bool>
{
    BlockVecBoolToStreamBool()

    Self.block -> BlockVecBoolToStreamBool.data,data -> Self.stream
}



use core/flow::BlockVecByteToStreamByte

/**
Stream a vector of `byte`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockByte()
  input  block:  Block<Vec<byte>>
  output stream: Stream<byte>
{
    BlockVecByteToStreamByte()

    Self.block -> BlockVecByteToStreamByte.data,data -> Self.stream
}



use core/flow::BlockVecCharToStreamChar

/**
Stream a vector of `char`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockChar()
  input  block:  Block<Vec<char>>
  output stream: Stream<char>
{
    BlockVecCharToStreamChar()

    Self.block -> BlockVecCharToStreamChar.data,data -> Self.stream
}



use core/flow::BlockVecStringToStreamString

/**
Stream a vector of `string`.

All values received in block vector are streamed ordered in output.
*/
sequence StreamBlockString()
  input  block:  Block<Vec<string>>
  output stream: Stream<string>
{
    BlockVecStringToStreamString()

    Self.block -> BlockVecStringToStreamString.data,data -> Self.stream
}


