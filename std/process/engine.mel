
use core/engine::Engine
use core/engine::EngineReady
use core/engine::EngineRead
use core/engine::EngineWrite

/**
Trigger when MÃ©lodium is ready to work.

`trigger` is send as soon as process is ready to work.
This sequence is useful to start processing from the beginning of the program.
*/
sequence ProcessReady()
    model engine: Engine()
    output trigger: Block<void>
{
    EngineReady[engine=engine]()

    EngineReady.ready -> Self.trigger
}

/**
Read process standard input.

Stream the lines received as input on stdin.
*/
sequence StandardInput()
    model engine: Engine()
    output line: Stream<string>
{
    EngineRead[engine=engine]()

    EngineRead.line -> Self.line
}

/**
Write process standard output.

Send the received text to stdout.
*/
sequence StandardOutput()
    model engine: Engine()
    input text: Stream<string>
{
    EngineWrite[engine=engine]()

    Self.text -> EngineWrite.text
}


