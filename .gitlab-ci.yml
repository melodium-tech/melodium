# Modified from original GitLab/Rust template

stages:
  - build
  - test
  - benchmark_rust
  - benchmark_melodium
  - deploy

# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
# services:
#   - mysql:latest
#   - redis:latest
#   - postgres:latest

# Optional: Install a C compiler, cmake and git into the container.
# You will often need this when you (or any of your dependencies) depends on C code.
# before_script:
#   - apt-get update -yqq
#   - apt-get install -yqq --no-install-recommends build-essential

image: rust:latest

# Installing ALSA dependency
before_script:
    - apt-get update
    - apt-get install -y libasound2-dev

# Use cargo to build the project
rust_build:
  stage: build
  script:
    - rustc --version && cargo --version  # Print version info for debugging
    - cargo build --verbose
  artifacts:
    paths:
    - target/debug/melodium
    expire_in: 1 day

rust_unit_tests:
 stage: test
 script:
   - cargo test --tests --verbose

rust_doc_tests:
 stage: test
 script:
   - cargo test --doc --verbose
#
#rust_benchmark:
#  stage: benchmark_rust
#  script:
#    - cargo bench --benches --verbose

melodium_tests:
  stage: test
  before_script:
    - apt-get update
    - apt-get install -y xxd libasound2
  script:
    - melodium-tests/run.sh

pages:
  stage: deploy
  before_script:
    - mkdir bin && curl -sSL https://github.com/rust-lang/mdBook/releases/download/v0.4.15/mdbook-v0.4.15-x86_64-unknown-linux-gnu.tar.gz | tar -xz --directory=bin
  script:
    - cargo doc --no-deps
    - mv target/doc public
    - utils/doc_generation.sh /tmp/doc
    - bin/mdbook build /tmp/doc
    - mv /tmp/doc/book public/reference
  artifacts:
    paths:
      - public
  only:
    - master
